{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","components/Searchbar/Searchbar.module.css","services/api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Loader/Loader.js","components/Button/Button.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","axios","defaults","baseURL","fetchImages","imageName","page","a","get","response","data","hits","Searchbar","onFormSubmit","className","s","onSubmit","e","preventDefault","target","elements","value","SearchForm","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","imageSrc","tags","largeImageURL","onImageClick","src","alt","ImageGalleryItemImage","onClick","propTipes","PropTypes","string","isRequired","func","ImageGallery","images","map","id","webformatURL","Spiner","wrapperLoader","color","height","width","timeout","Button","onLoadButton","wrapperButton","Modal","handleKeyDown","code","props","closeModal","window","addEventListener","this","removeEventListener","Overlay","currentTarget","children","Component","App","state","reqStatus","openImageUrl","handleFormSubmit","setState","prevState","toggleModal","showModal","_","notify","toast","error","duration","position","fetchImagesArray","length","newImagesArray","scrollTo","top","document","documentElement","scrollHeight","behavior","fillArray","currentStatus","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.51380f7f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem___K8Up\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2v-RJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperButton\":\"Button_wrapperButton__M5oem\",\"Button\":\"Button_Button__1RgpJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1qGlF\",\"Modal\":\"Modal_Modal__3D9Tv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__1B6wU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperLoader\":\"Loader_wrapperLoader__2kUgJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1PG6D\",\"SearchForm\":\"Searchbar_SearchForm__2YeYx\",\"SearchFormButton\":\"Searchbar_SearchFormButton__3Jt6B\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__mKO5M\",\"SearchFormInput\":\"Searchbar_SearchFormInput__3h2GK\"};","import axios from \"axios\";\n\nconst MY_API_KEY = \"15831772-a93111deddd9ec3e88224ce89\";\nconst BASE_URL = \"https://pixabay.com/api\";\nconst params = \"fields=id;webformatURL;largeImageURL\";\naxios.defaults.baseURL = BASE_URL;\n\nconst fetchImages = async (imageName, page) => {\n  const response = await axios.get(\n    `/?image_type=photo&orientation=horizontal&q=${imageName}&page=${page}&per_page=12&key=${MY_API_KEY}&${params}`\n  );\n  return response.data.hits;\n};\n\nexport default fetchImages;\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevImage = prevProps.imageName;\n//     const nextImage = this.props.imageName;\n//     const page = this.state.page;\n//     const MY_API_KEY = \"15831772-a93111deddd9ec3e88224ce89\";\n\n//     if (prevImage !== nextImage) {\n//       console.log(\"prevProps\", prevImage);\n//       console.log(\"this\", nextImage);\n//       fetch(\n//         `https://pixabay.com/api/?q=${nextImage}&page=${page}&key=${MY_API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n//       )\n//         .then(res => res.json())\n//         .then(imageArr => imageArr.hits)\n//         .then(images => this.setState({ images }))\n//         .catch(error => console.log(error));\n//     }\n//   }\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Searchbar.module.css\";\n\nconst Searchbar = ({ onFormSubmit }) => {\n  return (\n    <div>\n      <header className={s.Searchbar}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            onFormSubmit(e.target.elements.imageName.value);\n          }}\n          className={s.SearchForm}\n        >\n          <button type=\"submit\" className={s.SearchFormButton}>\n            <span className={s.SearchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.SearchFormInput}\n            type=\"text\"\n            name=\"imageName\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </form>\n      </header>\n    </div>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n","import PropTypes from \"prop-types\";\nimport s from \"./ImageGalleryItem.module.css\";\n\nconst ImageGalleryItem = ({ imageSrc, tags, largeImageURL, onImageClick }) => {\n  return (\n    <>\n      <li className={s.ImageGalleryItem}>\n        <img\n          src={imageSrc}\n          alt={tags}\n          className={s.ImageGalleryItemImage}\n          onClick={(e) => {\n            onImageClick(largeImageURL);\n          }}\n        />\n      </li>\n    </>\n  );\n};\n\nexport default ImageGalleryItem;\n\nImageGalleryItem.propTipes = {\n  imageSrc: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem\";\nimport s from \"./ImageGallery.module.css\";\n\nconst ImageGallery = ({ images, onImageClick }) => {\n  return (\n    <>\n      <ul className={s.ImageGallery}>\n        {images.map(({ id, webformatURL, tags, largeImageURL }) => (\n          <ImageGalleryItem\n            key={id}\n            id={id}\n            imageSrc={webformatURL}\n            tags={tags}\n            largeImageURL={largeImageURL}\n            onImageClick={onImageClick}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\nexport default ImageGallery;\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from \"react-loader-spinner\";\nimport s from \"./Loader.module.css\";\n\nexport default function Spiner() {\n  return (\n    <div className={s.wrapperLoader}>\n      <Loader\n        type=\"Oval\"\n        color=\"#3f51b5\"\n        height={60}\n        width={60}\n        timeout={3000}\n      />\n    </div>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport s from \"./Button.module.css\";\n\nconst Button = ({ onLoadButton }) => {\n  return (\n    <div className={s.wrapperButton}>\n      <button\n        type=\"button\"\n        className={s.Button}\n        onClick={(e) => onLoadButton(e)}\n      >\n        Load more\n      </button>\n    </div>\n  );\n};\n\nexport default Button;\n\nButton.propTypes = {\n  onLoadButton: PropTypes.func.isRequired,\n};\n","import React, { Component } from \"react\";\n\nimport s from \"./Modal.module.css\";\n\nexport default class Modal extends Component {\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.props.closeModal();\n    }\n  };\n\n  render() {\n    return (\n      <div\n        className={s.Overlay}\n        onClick={(e) => {\n          if (e.currentTarget === e.target) {\n            this.props.closeModal();\n          }\n        }}\n      >\n        <div className={s.Modal}>{this.props.children}</div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport fetchImages from \"./services\";\nimport Searchbar from \"./components/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery\";\nimport Spinner from \"./components/Loader\";\nimport Button from \"./components/Button\";\nimport Modal from \"./components/Modal\";\n\nclass App extends Component {\n  state = {\n    imageName: null,\n    images: [],\n    page: 1,\n    reqStatus: \"idle\",\n    openImageUrl: null,\n  };\n\n  async componentDidUpdate(_, prevState) {\n    const { imageName, images, page } = this.state;\n\n    if (\n      prevState.imageName !== this.state.imageName ||\n      prevState.page !== this.state.page\n    ) {\n      const notify = () =>\n        toast.error(\"No results were found for your search.\", {\n          duration: 3000,\n          position: \"top-right\",\n        });\n\n      try {\n        this.setState({\n          reqStatus: \"loading\",\n        });\n        const fetchImagesArray = await fetchImages(imageName, page);\n\n        if (fetchImagesArray.length === 0) {\n          this.setState({ reqStatus: \"idle\" });\n          return notify();\n        }\n\n        const newImagesArray = [...images, ...fetchImagesArray];\n\n        this.setState({\n          images: newImagesArray,\n          reqStatus: \"idle\",\n        });\n\n        if (page > 1) {\n          window.scrollTo({\n            top: document.documentElement.scrollHeight,\n            behavior: \"smooth\",\n          });\n        }\n      } catch (error) {\n        notify();\n\n        this.setState({\n          reqStatus: \"rejected\",\n        });\n      }\n    }\n  }\n\n  handleFormSubmit = (imageName) => {\n    this.setState({ imageName, images: [], page: 1 });\n  };\n\n  onLoadButton = () => {\n    this.setState((prevState) => {\n      return { page: prevState.page + 1 };\n    });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n    }));\n  };\n\n  onImageClick = (largeImageURL) => {\n    this.setState({\n      openImageUrl: largeImageURL,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({ openImageUrl: null });\n  };\n\n  render() {\n    const { imageName, images, reqStatus, openImageUrl } = this.state;\n    const fillArray = reqStatus === \"idle\" && images.length > 0;\n    const currentStatus = reqStatus === \"loading\";\n\n    return (\n      <div>\n        <Searchbar onFormSubmit={this.handleFormSubmit} />\n        <Toaster />\n        {currentStatus && <Spinner />}\n        <ImageGallery images={images} onImageClick={this.onImageClick} />\n        {openImageUrl && (\n          <Modal closeModal={this.closeModal}>\n            <img src={openImageUrl} alt={imageName} />\n          </Modal>\n        )}\n        {fillArray && <Button onLoadButton={this.onLoadButton} />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}